[{"content":"üì¶ What is Jetbrains' Toolbox App The Toolbox App is the best way of installing any Jetbrains software and Android Studio, which I\u0026rsquo;v knowm so far. It let\u0026rsquo;s you to install with a click differents versions of the supported softaware, but it goes more that only that, Toolbox allows you to manage (auto) updates, change versions, have multiple version at the same time.\n ‚è¨ Download Visit the official web site site and click on the Download Buttom, which it detects automately your SO and continue downloading the corresponding version. Otherwise, you can click on the button at the right of the \u0026ldquo;Download\u0026rdquo; buttom and select your right platmform.\n üíª Installation 1Ô∏è‚É£ Installing Toolbox App on Windows The minimum version supported to install The Toolbox App is a 64 bits Windows 8 o above.\n First, download the .exe installer at jetbrains.com/toolbox-app. Locate the file downloaded in your Downloaded File. Open the installer by Running the file as Administrator. Click on th \u0026ldquo;Install\u0026rdquo; button to start the installation. When the installation finishes, click on \u0026ldquo;Finish\u0026rdquo; and if you want open Toolbox immediately you can check the option \u0026ldquo;Open Jetbrains Toolbox\u0026rdquo;  üì∑ Screenshots for installing Toolbox on Windows  2Ô∏è‚É£ Installing Toolbox App on Linux This time I\u0026rsquo;m using elementary OS, which is an Ubuntu-based distribution, but you can use any other Linux distribution and find the right commands depending on your desktop environment or Linux flavor.\n The first step is to download the .tar.gz and extract its content either using an application with the user interface or by the command line. Once you had located your file, you can extract the content of it using the next command:  tar-xf \u0026lt;you file name\u0026gt;.tar.gz Where is the name of the file downloaded, for example, the current version available to download is \u0026ldquo;jetbrains-toolbox-1.22.10970.tar.gz\u0026rdquo; but when you download this, you could have a different number version.\nThen move the extracted folder to a location where you can find it any time you need to use it. Use a program like Nautilus, Files, or command line.  If you like, you can use the next command in your terminal.\nmv\u0026lt;folder to move\u0026gt; \u0026lt;destination\u0026gt; Where is name of the folder extracted (in my case jetbrains-toolbox-1.22.10970) and is the folder where you want to move your extracted folder. For example for me I\u0026rsquo;d use as next:\nmvjetbrains-toolbox-1.22.10970 ~/Apps/ Set permission to execute the app either using a files manager or by the terminal.  If you want to use commands, open a terminal located in your folder previously extracted and change its location by typing: chmod755 jetbrains-toolbox\nThen just open the jetbrains-toolbox AppImage application either using your file manager or by command line.  You only need to write ./ follow by the file name and press enter. ./jetbrains-toolbox\nüì∑ Screenshots for installing Toolbox on elementary OS  3Ô∏è‚É£ Installing Toolbox App on Mac OS To install the Toolbox App in Mac Os you need a macOS 10.14 (Mojave) o above and if you have a macOS with Apple Silicon you need to make sure you are going to download the corresponding option.\n On the website of Jetbrains Toolbox App click on the Download button to start the download. When the download had finished, locate the file and open it. A warning dialog will appear, which asks you if you are sure to open this file, click on the \u0026ldquo;Open\u0026rdquo; button to continue. The installer for .dmg files is shown and then you must drag and drop the Toolbox Icon over the Application icon on the right side. If the app was successfully installed, you can find it in the App Launcher then click on it. The first time you open the Toolbox App it will ask you to accept the User Agreement. Click on \u0026ldquo;Accept\u0026rdquo;.  üì∑ Screenshots for installing Toolbox on macOS  üìô Summary As you can see installing the Toolbox App is very easy on any platform because the Jetbrains team is making awesome work to offer a better user experience. On Windows you just need a pair of clicks, on Linux, you can choose between using the terminal or if your distribution is compatible with AppImage you can install it with a pair of clicks just like on Windows. And finally, the installation on macOS is quite easy the only thing you need is to do a simple drag and drop.\nThere are no excuses to not use Toolbox as your favorite way of installing Jetbrains' Products or Android Studio, this tool is a gem.\n","date":"2022-02-22T00:00:00Z","image":"https://calo001.github.io/p/how-to-install-jetbrains-toolbox/01-toolbox-cover_hu819817200c050a818e8f895ec32307f5_483392_120x120_fill_box_smart1_3.png","permalink":"https://calo001.github.io/p/how-to-install-jetbrains-toolbox/","title":"How to install Jetbrains Toolbox?"},{"content":"üíå My history Like many people some years ago I used to have a computer with Windows XP and technical requirement very poor. For years it works fine to me, but often it got viruses by using a diskette or a USB device from another person or by going to a cybercaf√©. My older brother always has been an enthusiast of technology and the Linux world. He installed Ubuntu on the computer with a dual boot and it was my starting point for me.\nUbuntu worked very well for me, but one thing I couldn\u0026rsquo;t accept at all was the UI. Fortunately, at That time the themes for Ubuntu were very popular, I often visited sites like www.gnome-look.org where I discovered ways to change the look and feel of Ubuntu with beautiful themes and icon packs. When Windows Vista and Windows Seven were released with transparencies, animations, icons, and so on I just got amazed about that and I wished for a way of getting that view without left using Linux. Fortunately, There was a very famous transformation pack for Ubuntu and I tried several times, the result was amazing even on my old computer. But there was a negative thing about it, I was very curious about customization and I always looked for ways of changing an icon or a color in the interface. Therefore, I often broke the UI, and then this made me reinstall Ubuntu several times, so it was tedious in the end.\nWhen GNOME 3 came out, I was fascinated by its appearance and I couldn\u0026rsquo;t wait to try it out. Unfortunately, GNOME 3 was extremely heavy for my computer because it get frizzed very often after a pair of minutes. I liked how it looks like but it was unusable for me, so I decided to search for other alternatives. I installed a distro with KDE and even I tried Linux Mint, both were very good options. KDE was interesting for me because the whole system looks very different than my previous experiences with other DE, but I gave up, due to the design of some elements that seemed very old to me. On the other hand, Cinnamon was very kind, and I used it for a long time but finally, I couldn\u0026rsquo;t get used to it.\nNext, I found an interesting project called Pear OS, which was a Linux distribution that took inspiration from Mac OS, and I decided to try it because it caught my eye. For my bad, when I installed it just didn\u0026rsquo;t work, the installer failed and I couldn\u0026rsquo;t give it a try.\nDisappointment of the unsuccessful installation, I continue using Cinnamon because it works better than nothing, but even Cinamon started to have problems with my computer like having freezings, slow startings, etc. Suddenly, surfing the internet I found blog posts that were talking about elementary OS and how it tried to imitate (not really) the Mac OS look and feel. I can\u0026rsquo;t remember where I read about it, I think maybe on Genbeta or hipertextual from Gabriela Gonzalez like üîó this post.\nThe first thing that elementary OS caught my attention was its top bar known as Wingpanel, it remembered me to the top panel of GNOME 3, and I thought that elementary os was a fork or it was a modified GNOME 3 (I was wrong). I decided to install it, I prepared the USB to create a bootable drive and try it even without a complete installation.\nWhen I use the elementary OS for the first time I got fascinated by how visual elements look on screen, icons, shadows, colors, and even the wallpaper was incredible. The first version I tried was Jupiter but at that time Luna was in early development. I didn\u0026rsquo;t know what version to install but I tried both and unfortunately, I was in a dilemma. I love the app launcher in the Jupiter version but Luna looked more attractive to me, the app launcher in Luna I didn\u0026rsquo;t like it at all that time but finally, I decided to go with Luna.\nelementary OS Luna wasn\u0026rsquo;t the perfect OS, it has bugs with their Files application, and sometimes it frizzed like other distributions I have tried before. But it works much better definitively, It was the only distribution that I could use fine and let me do my homework, surf the internet, and do what I wanted to do. And with the time I grow my use and\n üîñ My favorites features Now I\u0026rsquo;d like to share some of my favorites features of elementary OS:\n Multitasking view The multitasking view is the most loved feature I have. It\u0026rsquo;s very usable and easy to configure using either a touchpad or mouse. For me, using a mouse is faster than the touchpad because if you configure your hot corners you can make a fast and intuitive movement of the hand and the multitasking view appears. Using a touchpad has two options: the first is the same as using the mouse but you have to move your cursor to the respective corner, but the new and fancy way is using touchpad gestures with three or four fingers (depending on your configuration) and multitasking view appears.  Wingpanel indicators The Wingpanel (The dark top bar) has useful indicators and options, e.g., The volume indicator lets you manage different inputs and outputs devices. Also if you scroll up/down over the volume icon you can adjust the device volume, so that\u0026rsquo;s very useful. The notification indicator allows you to check previous notifications but the more important is that it lets you mute all notifications when you need no disturbs. Of course, you have a typical indicator for configuring the brightness, internet, even a calendar!  AppCenter Although App center with its default configuration doesn\u0026rsquo;t provide some software that I use in my day-to-day, I can find useful or interesting apps to try like Eddy, Khronos, Planner, and other apps, which I can discover and have fun with. Fortunately, AppCenter allows you to add external repositories for that reason I always add the Flathub repository, then I can download apps like Firefox, Chromium, Flatseal, VSCode, VLC Media Player, and so on.  Login Screen There is nothing special about it, but the login screen is pretty and the UX is amazing, e.g., indicating the status of Caps Lock or failing the password.   üíª How I use elementary OS   I usually read pdf files for studying English and I always need a music player too. Using multitasking view and keyboard shortcuts is very kind to navigate between those apps.\n  I currently have two apps in AppCenter, naturally I need an elementary OS for the development and maintenance.\n  I love using elementary OS when I want to try some unrelated to mobile development like trying a new language programming or doing things like this website.\n   üéÜ Conclusion And that\u0026rsquo;s it. I had become a fan of the elementary community following the official accounts from developers and founders (Danielle and Cassidy) and official channels like their Twitter account. It is incredible to see how they interact with their users and they are very kind people. And finally, I\u0026rsquo;ll continue using the elementary OS for many years.\n","date":"2022-02-17T00:00:00Z","image":"https://calo001.github.io/p/why-i-use-elementary-os/01-linux-cover_hud3f3afcc40572ee0fe4dd583d26b9c88_425085_120x120_fill_box_smart1_3.png","permalink":"https://calo001.github.io/p/why-i-use-elementary-os/","title":"Why I use elementary OS"},{"content":"üí° What is kotlin?  Kotlin is an open-source statically typed programming language that targets the JVM, Android, JavaScript and Native. It‚Äôs developed by JetBrains. The project started in 2010 and was open source from very early on. The first official 1.0 release was in February 2016.\nüîó Definition from the official FAQ.\n  üìö History Jetbrains announce the Kotlin Project, a new programming language that it had been building up for over a year and it is compatible with the JVM. The Kotlin programming language was licensed as an Apache 2.0 project. Version 1.0 was released, it was the first stable version. On Google I/O 2017 the first-class support for the kotlin language for Android development was announced. Uses. Version 1.2 was released. Version 1.3 was released. Version 1.4 was released. Versions 1.5 and 1.6 were released.   üëã Hello world The next lines show you how a basic hello world is. These lines can be complete content of a file .kt (the Kotlin extension) and it will print \u0026ldquo;Hello world\u0026rdquo; after compiling and executing it.\n1 2 3  fun main() { println(\u0026#34;Hello, World!\u0026#34;) }    üöÄ Uses   Android development: Kotlin is now the preferred language for Android developers and a lot of new libraries are now written in kotlin.\nüîó Learn more at developer.android.com/kotlin\n  Server-side development: Because Kotlin is interoperable with Java, there are many frameworks and libraries that have official support, and new frameworks have been created like Ktor.\nüîó For example the Ktor Project\nüîó Using Kotlin with Spring Boot\nüîó Vertx for Kotlin\n  Web development: Kotlin is capable of transpile to the JS language and this allows using projects that aim to create web projects using Kotlin.\nüîó Jetpack Compose for web\n  Desktop development: Any UI framework or library from the Java world can be used with kotlin.\nüîó Jetpack Compose for desktop\nüîó TornadoFX\n  Native development: You can compile to binary and target for a variety of platforms that a VM is not used, for example, the Android NDK, iOS, Mac, Linux, Windows, etc.\nüîó Learn more of Kotlin Native\n  Data science: Just like other technologies that came from the Java world, data science takes advantage of existing projects and accepts kotlin as a supported language.\nüîó Learn more of Kotlin for data science\n  Multiplatform mobile development: This initiative offers you to share code between Android and iOS projects and lets you keep the UI and platform-specific features separate from the domain logic. üîó Learn more of Kotlin multiplatform\n  Gradle plugins: Now you can use Kotlin instead of groovy to write Gradle plugins and scripts.\nüîó Learn more of using Kotlin on Gradle\n  AWS SDK: Recently amazon announce a new SDK to allow developers to call AWS services using kotlin specific features.\nüîó Official announcement\n   ‚ùì Did you know ‚Ä¶?   Roman Elizarov is the project lead of the Kotlin Project.\n  The name ‚ÄúKotlin‚Äù comes from an island called ‚ÄúKotlin Island‚Äù near St. Petersburg.\n  One of the reasons for creating a new language was to improve sales of IntelliJ IDEA.\n  Eclipse and Netbeans have an official plugin for Kotlin.\n  ","date":"2022-02-15T00:00:00Z","image":"https://calo001.github.io/p/what-is-kotlin/01-kotlin-cover_hu6dbc79a0e1182afab247bfe2e89341c2_477569_120x120_fill_box_smart1_3.png","permalink":"https://calo001.github.io/p/what-is-kotlin/","title":"What is Kotlin?"}]